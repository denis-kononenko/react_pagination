{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPageNumber","Math","ceil","pageNumbers","className","cn","disabled","href","onClick","map","item","active","e","event","selectedPageNumber","Number","currentTarget","textContent","selectPage","items","App","useState","setCurrentPage","setPerPage","startIndex","endIndex","length","visibleItems","slice","id","onChange","selectedValue","target","value","selectPerPage","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAkBC,KAAKC,KAAKN,EAAQC,GACpCM,EAAcd,EAAW,EAAGW,GAsBlC,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBR,IAFd,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAxBoB,WACtBV,EAAc,GAChBC,EAAaD,EAAc,IAiBzB,oBAUDK,EAAYM,KAAI,SAAAC,GAAI,OACnB,oBAEEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAASZ,IAHrB,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,KACLC,QAAS,SAACI,IAhDD,SAACC,GAClB,IAAMC,EAAqBC,OAAOF,EAAMG,cAAcC,aAElDH,IAAuBhB,GACzBC,EAAae,GA6CLI,CAAWN,IALf,SAQGF,KAbEA,MAiBT,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUR,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRO,KAAK,QACLH,UAAU,YACV,gBAAeN,IAAgBE,EAC/BQ,QApDoB,WACtBV,EAAcE,GAChBD,EAAaD,EAAc,IA6CzB,wBC3EFqB,EAAQ9B,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEP2B,EAAgB,WAC3B,MAAsCC,mBAAiB,GAAvD,mBAAOvB,EAAP,KAAoBwB,EAApB,KACA,EAA8BD,mBAAiB,GAA/C,mBAAOxB,EAAP,KAAgB0B,EAAhB,KAEMC,GAAc1B,EAAc,GAAKD,EACnC4B,EAAW3B,EAAcD,EAEzB4B,EAAWN,EAAMO,SACnBD,EAAWN,EAAMO,QAGnB,IAAMC,EAAeR,EAAMS,MAAMJ,EAAYC,GAW7C,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiC0B,EAAa,EAD9C,cACqDC,EADrD,eACoEN,EAAMO,OAD1E,OAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,SAAU,SAAClB,GAAD,OAvBE,SAACC,GACrB,IAAMkB,EAAgBhB,OAAOF,EAAMmB,OAAOC,OAEtCF,IAAkBlC,IACpB0B,EAAWQ,GACXT,EAAe,IAkBQY,CAActB,IAC/BqB,MAAOpC,EALT,UAOE,wBAAQoC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOuB,EAAMO,OACb7B,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACqC,GACbd,EAAec,MAInB,6BACGT,EAAalB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCpEnB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.452248eb.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPageNumber = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, totalPageNumber);\n\n  const selectPage = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const selectedPageNumber = Number(event.currentTarget.textContent);\n\n    if (selectedPageNumber !== currentPage) {\n      onPageChange(selectedPageNumber);\n    }\n  };\n\n  const handleClickPrevLink = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleClickNextLink = () => {\n    if (currentPage < totalPageNumber) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handleClickPrevLink}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(item => (\n        <li\n          key={item}\n          className={cn('page-item', {\n            active: item === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#1\"\n            onClick={(e) => {\n              selectPage(e);\n            }}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === totalPageNumber,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          href=\"#next\"\n          className=\"page-link\"\n          aria-disabled={currentPage === totalPageNumber}\n          onClick={handleClickNextLink}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(5);\n\n  const startIndex = (currentPage - 1) * perPage;\n  let endIndex = currentPage * perPage;\n\n  if (endIndex > items.length) {\n    endIndex = items.length;\n  }\n\n  const visibleItems = items.slice(startIndex, endIndex);\n\n  const selectPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = Number(event.target.value);\n\n    if (selectedValue !== perPage) {\n      setPerPage(selectedValue);\n      setCurrentPage(1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => selectPerPage(e)}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}