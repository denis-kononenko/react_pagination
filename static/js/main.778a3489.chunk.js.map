{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPageNumber","Math","ceil","pageNumbers","isFirstPage","isLastPage","className","cn","disabled","href","onClick","map","item","active","e","event","selectedPageNumber","Number","currentTarget","textContent","selectPage","items","App","useState","setCurrentPage","setPerPage","startIndex","endIndex","min","length","visibleItems","slice","id","onChange","selectedValue","target","value","selectPerPage","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAkBC,KAAKC,KAAKN,EAAQC,GACpCM,EAAcd,EAAW,EAAGW,GAC5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAsBnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAxBoB,WACtBZ,EAAc,GAChBC,EAAaD,EAAc,IAiBzB,oBAUDK,EAAYQ,KAAI,SAAAC,GAAI,OACnB,oBAEEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAASd,IAHrB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,KACLC,QAAS,SAACI,IAhDD,SAACC,GAClB,IAAMC,EAAqBC,OAAOF,EAAMG,cAAcC,aAElDH,IAAuBlB,GACzBC,EAAaiB,GA6CLI,CAAWN,IALf,SAQGF,KAbEA,MAiBT,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRI,KAAK,QACLH,UAAU,YACV,gBAAeD,EACfK,QApDoB,WACtBZ,EAAcE,GAChBD,EAAaD,EAAc,IA6CzB,wBC9EFuB,EAAQhC,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEP6B,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB0B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KAGMC,GAAc5B,EAAc,GAAKD,EACjC8B,EAAW1B,KAAK2B,IAAI9B,EAAcD,EAASwB,EAAMQ,QAEjDC,EAAeT,EAAMU,MAAML,EAAYC,GAW7C,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC4B,EAAa,EAD9C,cACqDC,EADrD,eACoEN,EAAMQ,OAD1E,OAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,SAAU,SAACnB,GAAD,OAvBE,SAACC,GACrB,IAAMmB,EAAgBjB,OAAOF,EAAMoB,OAAOC,OAEtCF,IAAkBrC,IACpB4B,EAAWS,GACXV,EAAe,IAkBQa,CAAcvB,IAC/BsB,MAAOvC,EALT,SA1Bc,CAAC,EAAG,EAAG,GAAI,IAiCRc,KAAI,SAAAyB,GAAK,OACtB,wBAAoBA,MAAOA,EAA3B,SAAmCA,GAAtBA,UAKnB,uBAAOE,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOyB,EAAMQ,OACbhC,QAASA,EACTC,YAAaA,EACbC,aAAcyB,IAGhB,6BACGM,EAAanB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC7DnB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.778a3489.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPageNumber = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, totalPageNumber);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPageNumber;\n\n  const selectPage = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const selectedPageNumber = Number(event.currentTarget.textContent);\n\n    if (selectedPageNumber !== currentPage) {\n      onPageChange(selectedPageNumber);\n    }\n  };\n\n  const handleClickPrevLink = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleClickNextLink = () => {\n    if (currentPage < totalPageNumber) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: isFirstPage,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handleClickPrevLink}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(item => (\n        <li\n          key={item}\n          className={cn('page-item', {\n            active: item === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#1\"\n            onClick={(e) => {\n              selectPage(e);\n            }}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn('page-item', {\n          disabled: isLastPage,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          href=\"#next\"\n          className=\"page-link\"\n          aria-disabled={isLastPage}\n          onClick={handleClickNextLink}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const perPageValues = [3, 5, 10, 20];\n\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = Math.min(currentPage * perPage, items.length);\n\n  const visibleItems = items.slice(startIndex, endIndex);\n\n  const selectPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = Number(event.target.value);\n\n    if (selectedValue !== perPage) {\n      setPerPage(selectedValue);\n      setCurrentPage(1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => selectPerPage(e)}\n            value={perPage}\n          >\n            {perPageValues.map(value => (\n              <option key={value} value={value}>{value}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}